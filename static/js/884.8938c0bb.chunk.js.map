{"version":3,"file":"static/js/884.8938c0bb.chunk.js","mappings":"iOAqEA,UAjEqB,WAAO,IAAD,IACzB,GAAkCA,EAAAA,EAAAA,UAAS,IAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KAEMC,GAAWC,EAAAA,EAAAA,MACXC,GAAsBC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,KACnDC,GAAYC,EAAAA,EAAAA,MAAZD,SAERE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAmB,mCAAG,WAAMH,GAAN,iGAELI,EAAAA,EAAAA,GAAaJ,GAFR,OAElBK,EAFkB,OAGxBZ,EAAaY,GAHW,gDAKxBC,QAAQC,IAAI,KAAMC,SALM,yDAAH,sDAWzBL,EAAoBH,EACrB,GAAE,CAACA,IAEJ,IAAQS,EACNjB,EADMiB,YAAaC,EACnBlB,EADmBkB,eAAgBC,EACnCnB,EADmCmB,aAAcC,EACjDpB,EADiDoB,SAAUC,EAC3DrB,EAD2DqB,OAGvDC,EAAYH,EAAY,WACP,GAAfA,GAAmBI,QAAQ,GADL,KAE1B,+BAGEC,EAAYP,EAAW,0CACUA,GACnC,oEAEJ,OACE,iCACE,SAAC,KAAD,CAAMQ,GAAIrB,EAAoBsB,QAA9B,4JACA,4BACE,gBAAKC,IAAKH,EAAWI,IAAKV,KAC1B,4BACE,wBAAKA,KACL,wCAAgBI,MAChB,sCACA,uBAAIF,KACJ,oCACA,uBACGC,GACCA,EAAOQ,OAAS,GAChBR,EAAOS,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,gBAelD,C,qHCjEKC,EAAW,6BACXC,EAAU,mCAEHC,EAAiB,mCAAG,sGACRC,EAAAA,EAAAA,IAAA,UAClBH,EADkB,yCACuBC,IAFf,uBACvBtB,EADuB,EACvBA,KADuB,kBAKxBA,GALwB,2CAAH,qDAQjBD,EAAY,mCAAG,WAAMJ,GAAN,yFACH6B,EAAAA,EAAAA,IAAA,UAClBH,EADkB,oBACE1B,EADF,oBACqB2B,EADrB,oBADG,uBAClBtB,EADkB,EAClBA,KADkB,kBAKnBA,GALmB,2CAAH,qD","sources":["pages/MovieDetails.jsx","services/api.jsx"],"sourcesContent":["import { useRef, useEffect, useState } from 'react';\nimport { useParams, useLocation, Link } from 'react-router-dom';\nimport { getMovieById } from 'services/api';\n\nconst MovieDetails = () => {\n  const [movieInfo, setMovieInfo] = useState([]);\n\n  const location = useLocation();\n  const backLinkLocationRef = useRef(location.state?.from ?? '/');\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const fetchTrendingMovies = async movieId => {\n      try {\n        const data = await getMovieById(movieId);\n        setMovieInfo(data);\n      } catch (error) {\n        console.log(error.message);\n      }\n      // finally {\n      // }\n    };\n\n    fetchTrendingMovies(movieId);\n  }, [movieId]);\n\n  const { poster_path, original_title, vote_average, overview, genres } =\n    movieInfo;\n\n  const userScore = vote_average\n    ? `${(vote_average * 10).toFixed(0)}%`\n    : \"This movie haven't rated yet\";\n  // https://image.tmdb.org/t/p/original/\n\n  const posterImg = poster_path\n    ? `https://image.tmdb.org/t/p/w400/${poster_path}`\n    : 'https://via.placeholder.com/400x600.png?text=Poster+Not+Available';\n\n  return (\n    <>\n      <Link to={backLinkLocationRef.current}>Назад к странице коллекции</Link>\n      <div>\n        <img src={posterImg} alt={original_title} />\n        <div>\n          <h2>{original_title}</h2>\n          <p>User Score: {userScore}</p>\n          <h3>Overview</h3>\n          <p>{overview}</p>\n          <h3>Genres</h3>\n          <p>\n            {genres &&\n              genres.length > 0 &&\n              genres.map(genre => genre.name).join(', ')}\n          </p>\n        </div>\n      </div>\n\n      {/* <ul>\n        <li>\n          <Link to=\"subbreeds\">Подподроды</Link>\n        </li>\n        <li>\n          <Link to=\"gallery\">Галерея</Link>\n        </li>\n      </ul> */}\n    </>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org';\nconst API_KEY = '8776cc9f66dd32d7c5ecc9b66eb74c99';\n\nexport const getTrendingMovies = async () => {\n  const { data } = await axios.get(\n    `${BASE_URL}/3/trending/movie/day?api_key=${API_KEY}`\n  );\n\n  return data;\n};\n\nexport const getMovieById = async movieId => {\n  const { data } = await axios.get(\n    `${BASE_URL}/3/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return data;\n};\n\n// export const getMovieByName = async query => {\n//   const { data } = await axios.get(\n//     `${baseURL}/3/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n//   );\n\n//   return data;\n// };\n\n// export const getMovieCast = async movieId => {\n//   const { data } = await axios.get(\n//     `${baseURL}/3/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n//   );\n\n//   return data;\n// };\n\n// export const getMovieReviews = async movieId => {\n//   const { data } = await axios.get(\n//     `${baseURL}/3/movie/${movieId}}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n//   );\n\n//   return data;\n// };\n"],"names":["useState","movieInfo","setMovieInfo","location","useLocation","backLinkLocationRef","useRef","state","from","movieId","useParams","useEffect","fetchTrendingMovies","getMovieById","data","console","log","message","poster_path","original_title","vote_average","overview","genres","userScore","toFixed","posterImg","to","current","src","alt","length","map","genre","name","join","BASE_URL","API_KEY","getTrendingMovies","axios"],"sourceRoot":""}