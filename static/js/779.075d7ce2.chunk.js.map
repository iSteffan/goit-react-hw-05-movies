{"version":3,"file":"static/js/779.075d7ce2.chunk.js","mappings":"4LAEaA,EAAS,WACpB,OACE,SAAC,KAAD,CACEC,OAAO,KACPC,MAAM,KACNC,OAAO,IACPC,MAAM,UACNC,UAAU,qBACVC,aAAc,CAAEC,eAAgB,UAChCC,iBAAiB,SACjBC,SAAS,GAGd,C,6JCbYC,EAAQC,EAAAA,GAAAA,IAAH,0DAKLC,EAAOD,EAAAA,GAAAA,GAAH,mGAQJE,EAAYF,EAAAA,GAAAA,GAAH,yC,SCZTG,EAAwB,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,OAAuB,EAAfC,SAK9C,OACE,SAACJ,EAAD,UACGG,EAAOE,KAAI,SAAAC,GAAI,OACd,yBACE,UAAC,KAAD,CAASC,GAAE,kBAAaD,EAAKE,IAA7B,UACGF,EAAKG,eACJ,SAACX,EAAD,CACEY,IAAG,0CAAqCJ,EAAKK,aAC7CC,IAAKN,EAAKO,kBAGZ,SAACf,EAAD,CACEY,IACE,oEAEFE,IAAKN,EAAKO,kBAGd,SAACZ,EAAD,UAAYK,EAAKO,qBAfZP,EAAKE,GADA,KAsBrB,E,SCID,EA/Ba,WACX,OAA4CM,EAAAA,EAAAA,UAAS,IAArD,eAAOC,EAAP,KAAuBC,EAAvB,KACA,GAAoCF,EAAAA,EAAAA,WAAS,GAA7C,eAAOG,EAAP,KAAmBC,EAAnB,KACA,GAAsDJ,EAAAA,EAAAA,WAAS,GAA/D,eAAOK,EAAP,KAA4BC,EAA5B,KAmBA,OAjBAC,EAAAA,EAAAA,YAAU,WACRH,GAAc,GACd,IAAMI,EAAmB,mCAAG,gHAEEC,EAAAA,EAAAA,KAFF,gBAEhBC,EAFgB,EAEhBA,QACRR,EAAkBQ,GAHM,gDAKxBC,QAAQC,IAAI,KAAMC,SALM,yBAOxBT,GAAc,GACdE,GAAuB,GARC,4EAAH,qDAYzBE,GACD,GAAE,KAGD,iCACE,2CACCL,IAAc,SAAC7B,EAAA,EAAD,IACd+B,IAAuB,SAACjB,EAAD,CAAuBC,OAAQY,MAG5D,C,qHChCKa,EAAW,6BACXC,EAAU,mCAEHN,EAAiB,mCAAG,sGACRO,EAAAA,EAAAA,IAAA,UAClBF,EADkB,yCACuBC,IAFf,uBACvBE,EADuB,EACvBA,KADuB,kBAKxBA,GALwB,2CAAH,qDAQjBC,EAAY,mCAAG,WAAMC,GAAN,yFACHH,EAAAA,EAAAA,IAAA,UAClBF,EADkB,oBACEK,EADF,oBACqBJ,EADrB,oBADG,uBAClBE,EADkB,EAClBA,KADkB,kBAKnBA,GALmB,2CAAH,qD","sources":["components/Loader/Loader.jsx","components/TrendingMoviesGallery/TrendingMoviesGallery.styled.jsx","components/TrendingMoviesGallery/TrendingMoviesGallery.jsx","pages/Home.jsx","services/api.jsx"],"sourcesContent":["import { ThreeDots } from 'react-loader-spinner';\n\nexport const Loader = () => {\n  return (\n    <ThreeDots\n      height=\"80\"\n      width=\"80\"\n      radius=\"9\"\n      color=\"#4fa94d\"\n      ariaLabel=\"three-dots-loading\"\n      wrapperStyle={{ justifyContent: 'center' }}\n      wrapperClassName=\"loader\"\n      visible={true}\n    />\n  );\n};\n","import styled from 'styled-components';\n\nexport const Image = styled.img`\n  width: 200px;\n  height: auto;\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 30px;\n\n  list-style: none;\n`;\n\nexport const MovieName = styled.h3`\n  width: 200px;\n`;\n","import { NavLink } from 'react-router-dom';\nimport { Image, List, MovieName } from './TrendingMoviesGallery.styled';\n\nexport const TrendingMoviesGallery = ({ movies, location }) => {\n  //   const posterImg = movies.poster_path\n  //     ? `https://image.tmdb.org/t/p/w400/${movies.poster_path}`\n  //     : 'https://via.placeholder.com/400x600.png?text=Poster+Not+Available';\n  //   const location = useLocation();\n  return (\n    <List>\n      {movies.map(item => (\n        <li key={item.id}>\n          <NavLink to={`/movies/${item.id}`}>\n            {item.backdrop_path ? (\n              <Image\n                src={`https://image.tmdb.org/t/p/w400/${item.poster_path}`}\n                alt={item.original_title}\n              />\n            ) : (\n              <Image\n                src={\n                  'https://via.placeholder.com/400x600.png?text=Poster+Not+Available'\n                }\n                alt={item.original_title}\n              />\n            )}\n            <MovieName>{item.original_title}</MovieName>\n          </NavLink>\n        </li>\n      ))}\n    </List>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { getTrendingMovies } from 'services/api';\nimport { TrendingMoviesGallery } from 'components/TrendingMoviesGallery/TrendingMoviesGallery';\nimport { Loader } from 'components/Loader/Loader';\n\nconst Home = () => {\n  const [trendingMovies, setTrendingMovies] = useState([]);\n  const [showLoader, setShowLoader] = useState(false);\n  const [isContentDownloaded, setIsContentDownloaded] = useState(false);\n\n  useEffect(() => {\n    setShowLoader(true);\n    const fetchTrendingMovies = async () => {\n      try {\n        const { results } = await getTrendingMovies();\n        setTrendingMovies(results);\n      } catch (error) {\n        console.log(error.message);\n      } finally {\n        setShowLoader(false);\n        setIsContentDownloaded(true);\n      }\n    };\n\n    fetchTrendingMovies();\n  }, []);\n\n  return (\n    <>\n      <h2>Trending today</h2>\n      {showLoader && <Loader />}\n      {isContentDownloaded && <TrendingMoviesGallery movies={trendingMovies} />}\n    </>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org';\nconst API_KEY = '8776cc9f66dd32d7c5ecc9b66eb74c99';\n\nexport const getTrendingMovies = async () => {\n  const { data } = await axios.get(\n    `${BASE_URL}/3/trending/movie/day?api_key=${API_KEY}`\n  );\n\n  return data;\n};\n\nexport const getMovieById = async movieId => {\n  const { data } = await axios.get(\n    `${BASE_URL}/3/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return data;\n};\n\n// export const getMovieByName = async query => {\n//   const { data } = await axios.get(\n//     `${baseURL}/3/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n//   );\n\n//   return data;\n// };\n\n// export const getMovieCast = async movieId => {\n//   const { data } = await axios.get(\n//     `${baseURL}/3/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n//   );\n\n//   return data;\n// };\n\n// export const getMovieReviews = async movieId => {\n//   const { data } = await axios.get(\n//     `${baseURL}/3/movie/${movieId}}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n//   );\n\n//   return data;\n// };\n"],"names":["Loader","height","width","radius","color","ariaLabel","wrapperStyle","justifyContent","wrapperClassName","visible","Image","styled","List","MovieName","TrendingMoviesGallery","movies","location","map","item","to","id","backdrop_path","src","poster_path","alt","original_title","useState","trendingMovies","setTrendingMovies","showLoader","setShowLoader","isContentDownloaded","setIsContentDownloaded","useEffect","fetchTrendingMovies","getTrendingMovies","results","console","log","message","BASE_URL","API_KEY","axios","data","getMovieById","movieId"],"sourceRoot":""}