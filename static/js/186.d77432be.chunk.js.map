{"version":3,"file":"static/js/186.d77432be.chunk.js","mappings":"yNAyCA,UApCgB,WACd,OAA8BA,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAoBR,OAlBAE,EAAAA,EAAAA,YAAU,WAER,IAAMC,EAAc,mCAAG,WAAMH,GAAN,mGAEOI,EAAAA,EAAAA,IAAgBJ,GAFvB,gBAEXK,EAFW,EAEXA,QAERN,EAAWM,GAJQ,gDAMnBC,QAAQC,IAAI,KAAMC,SANC,yDAAH,sDAapBL,EAAeH,EAChB,GAAE,CAACA,IAEsB,IAAnBF,EAAQW,QACb,qEAEA,wBACGX,EAAQY,KAAI,SAAAC,GAAM,OACjB,2BACE,qCAAaA,EAAOC,WACpB,uBAAID,EAAOE,YAFJF,EAAOG,GADC,KAQxB,C,+LCrCKC,EAAW,6BACXC,EAAU,mCAEHC,EAAiB,mCAAG,sGACRC,EAAAA,EAAAA,IAAA,UAClBH,EADkB,yCACuBC,IAFf,uBACvBG,EADuB,EACvBA,KADuB,kBAKxBA,GALwB,2CAAH,qDAQjBC,EAAY,mCAAG,WAAMpB,GAAN,yFACHkB,EAAAA,EAAAA,IAAA,UAClBH,EADkB,oBACEf,EADF,oBACqBgB,EADrB,oBADG,uBAClBG,EADkB,EAClBA,KADkB,kBAKnBA,GALmB,2CAAH,sDAQZE,EAAY,mCAAG,WAAMrB,GAAN,yFACHkB,EAAAA,EAAAA,IAAA,UAClBH,EADkB,oBACEf,EADF,4BAC6BgB,EAD7B,oBADG,uBAClBG,EADkB,EAClBA,KADkB,kBAKnBA,GALmB,2CAAH,sDAQZf,EAAe,mCAAG,WAAMJ,GAAN,yFACNkB,EAAAA,EAAAA,IAAA,UAClBH,EADkB,oBACEf,EADF,6BAC8BgB,EAD9B,2BADM,uBACrBG,EADqB,EACrBA,KADqB,kBAKtBA,GALsB,2CAAH,sDAQfG,EAAiB,mCAAG,WAAMC,GAAN,yFACRL,EAAAA,EAAAA,IAAA,UAClBH,EADkB,mCACiBC,EADjB,iCACiDO,EADjD,gCADQ,uBACvBJ,EADuB,EACvBA,KADuB,kBAKxBA,GALwB,2CAAH,qD","sources":["components/Reviews/Reviews.jsx","services/api.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieReviews } from 'services/api';\n// import { Image, List } from './Cast.styled';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    // setShowLoader(true);\n    const fetchMovieCast = async movieId => {\n      try {\n        const { results } = await getMovieReviews(movieId);\n        // console.log(results);\n        setReviews(results);\n      } catch (error) {\n        console.log(error.message);\n      }\n      // finally {\n      //   // setShowLoader(false);\n      // }\n    };\n\n    fetchMovieCast(movieId);\n  }, [movieId]);\n\n  return reviews.length === 0 ? (\n    <p>Sorry, there is no review for this movie</p>\n  ) : (\n    <ul>\n      {reviews.map(review => (\n        <li key={review.id}>\n          <h3>Author: {review.author}</h3>\n          <p>{review.content}</p>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default Reviews;\n// return ({\n//   reviews.length === 0 ?\n//     (<p>no review</p>)\n//     :\n//     (<ul>\n//     {reviews.map(review => (\n//       <li key={review.id}>\n//         <h3>Author: {review.author}</h3>\n//         <p>{review.content}</p>\n//       </li>\n//     ))}\n//   </ul>)}\n// );\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org';\nconst API_KEY = '8776cc9f66dd32d7c5ecc9b66eb74c99';\n\nexport const getTrendingMovies = async () => {\n  const { data } = await axios.get(\n    `${BASE_URL}/3/trending/movie/day?api_key=${API_KEY}`\n  );\n\n  return data;\n};\n\nexport const getMovieById = async movieId => {\n  const { data } = await axios.get(\n    `${BASE_URL}/3/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return data;\n};\n\nexport const getMovieCast = async movieId => {\n  const { data } = await axios.get(\n    `${BASE_URL}/3/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n\n  return data;\n};\n\nexport const getMovieReviews = async movieId => {\n  const { data } = await axios.get(\n    `${BASE_URL}/3/movie/${movieId}}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n\n  return data;\n};\n\nexport const getMovieByKeyword = async query => {\n  const { data } = await axios.get(\n    `${BASE_URL}/3/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n\n  return data;\n};\n"],"names":["useState","reviews","setReviews","movieId","useParams","useEffect","fetchMovieCast","getMovieReviews","results","console","log","message","length","map","review","author","content","id","BASE_URL","API_KEY","getTrendingMovies","axios","data","getMovieById","getMovieCast","getMovieByKeyword","query"],"sourceRoot":""}