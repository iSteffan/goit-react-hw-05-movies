{"version":3,"file":"static/js/884.1e453b04.chunk.js","mappings":"6LA0EA,UA/DqB,WAAO,IAAD,IACzB,GAAkCA,EAAAA,EAAAA,UAAS,IAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KAEMC,GAAWC,EAAAA,EAAAA,MACXC,GAAsBC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,KACnDC,GAAYC,EAAAA,EAAAA,MAAZD,SAERE,EAAAA,EAAAA,YAAU,WACRC,MAAM,sCAAD,OACmCH,EADnC,oBAVO,mCAUP,oBAGFI,MAAK,SAAAC,GAAI,OAAIA,EAAKC,MAAT,IACTF,MAAK,SAAAG,GACJC,QAAQC,IAAIF,GACZd,EAAac,EACd,IAEAG,OAAM,SAAAC,GAAK,OAAIH,QAAQG,MAAMA,EAAlB,GACf,GAAE,CAACX,IAEJ,IAAQY,EACNpB,EADMoB,YAAaC,EACnBrB,EADmBqB,eAAgBC,EACnCtB,EADmCsB,aAAcC,EACjDvB,EADiDuB,SAAUC,EAC3DxB,EAD2DwB,OAGvDC,EAAYH,EAAY,WACP,GAAfA,GAAmBI,QAAQ,GADL,KAE1B,+BAGEC,EAAYP,EAAW,0CACUA,GACnC,oEAEJ,OACE,iCACE,SAAC,KAAD,CAAMQ,GAAIxB,EAAoByB,QAA9B,4JACA,4BACE,gBAAKC,IAAKH,EAAWI,IAAKV,KAC1B,4BACE,wBAAKA,KACL,wCAAgBI,MAChB,sCACA,uBAAIF,KACJ,oCACA,uBACGC,GACCA,EAAOQ,OAAS,GAChBR,EAAOS,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,gBAelD,C","sources":["pages/MovieDetails.jsx"],"sourcesContent":["import { useRef, useEffect, useState } from 'react';\nimport { useParams, useLocation, Link } from 'react-router-dom';\n\n// 1. http://localhost:3000/dogs?dogId=2\n// 2. http://localhost:3000/dogs/dog-2\n// 3. const backLinkLocationRef = useRef(location.state?.from ?? '/dogs');\n// 4. http://localhost:3000/dogs/dog-2/gallery\n// 5. backLinkLocationRef не меняется и все еще ведет на http://localhost:3000/dogs?dogId=2\n\nconst API_KEY = '8776cc9f66dd32d7c5ecc9b66eb74c99';\n\nconst MovieDetails = () => {\n  const [movieInfo, setMovieInfo] = useState([]);\n\n  const location = useLocation();\n  const backLinkLocationRef = useRef(location.state?.from ?? '/');\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    fetch(\n      `https://api.themoviedb.org/3/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n    )\n      .then(resp => resp.json())\n      .then(response => {\n        console.log(response);\n        setMovieInfo(response);\n      })\n\n      .catch(error => console.error(error));\n  }, [movieId]);\n\n  const { poster_path, original_title, vote_average, overview, genres } =\n    movieInfo;\n\n  const userScore = vote_average\n    ? `${(vote_average * 10).toFixed(0)}%`\n    : \"This movie haven't rated yet\";\n  // https://image.tmdb.org/t/p/original/\n\n  const posterUrl = poster_path\n    ? `https://image.tmdb.org/t/p/w400/${poster_path}`\n    : 'https://via.placeholder.com/400x600.png?text=Poster+Not+Available';\n\n  return (\n    <>\n      <Link to={backLinkLocationRef.current}>Назад к странице коллекции</Link>\n      <div>\n        <img src={posterUrl} alt={original_title} />\n        <div>\n          <h2>{original_title}</h2>\n          <p>User Score: {userScore}</p>\n          <h3>Overview</h3>\n          <p>{overview}</p>\n          <h3>Genres</h3>\n          <p>\n            {genres &&\n              genres.length > 0 &&\n              genres.map(genre => genre.name).join(', ')}\n          </p>\n        </div>\n      </div>\n\n      {/* <ul>\n        <li>\n          <Link to=\"subbreeds\">Подподроды</Link>\n        </li>\n        <li>\n          <Link to=\"gallery\">Галерея</Link>\n        </li>\n      </ul> */}\n    </>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["useState","movieInfo","setMovieInfo","location","useLocation","backLinkLocationRef","useRef","state","from","movieId","useParams","useEffect","fetch","then","resp","json","response","console","log","catch","error","poster_path","original_title","vote_average","overview","genres","userScore","toFixed","posterUrl","to","current","src","alt","length","map","genre","name","join"],"sourceRoot":""}