{"version":3,"file":"static/js/779.47d904b9.chunk.js","mappings":"4LAEaA,EAAS,WACpB,OACE,SAAC,KAAD,CACEC,OAAO,KACPC,MAAM,KACNC,OAAO,IACPC,MAAM,UACNC,UAAU,qBACVC,aAAc,CAAEC,eAAgB,UAChCC,iBAAiB,SACjBC,SAAS,GAGd,C,qKCbYC,EAASC,EAAAA,GAAAA,EAAH,8CAINC,EAAOD,EAAAA,GAAAA,GAAH,6C,SC2CjB,EA3CgB,WACd,OAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAoCH,EAAAA,EAAAA,WAAS,GAA7C,eAAOK,EAAP,KAAmBC,EAAnB,KACA,GAAsDN,EAAAA,EAAAA,WAAS,GAA/D,eAAOO,EAAP,KAA4BC,EAA5B,KAoBA,OAlBAC,EAAAA,EAAAA,YAAU,WACRH,GAAc,GACd,IAAMI,EAAc,mCAAG,WAAMP,GAAN,mGAEOQ,EAAAA,EAAAA,IAAgBR,GAFvB,gBAEXS,EAFW,EAEXA,QAERV,EAAWU,GAJQ,gDAMnBC,QAAQC,IAAI,KAAMC,SANC,yBAQnBT,GAAc,GACdE,GAAuB,GATJ,4EAAH,sDAapBE,EAAeP,EAChB,GAAE,CAACA,KAGF,gCACGE,IAAc,SAAClB,EAAA,EAAD,IACdoB,GAA0C,IAAnBN,EAAQe,QAC9B,SAACnB,EAAD,wDAEA,SAACE,EAAD,UACGE,EAAQgB,KAAI,SAAAC,GAAM,OACjB,2BACE,qCAAaA,EAAOC,WACpB,uBAAID,EAAOE,YAFJF,EAAOG,GADC,QAU5B,C,+LC7CKC,EAAW,6BACXC,EAAU,mCAEHC,EAAiB,mCAAG,sGACRC,EAAAA,EAAAA,IAAA,UAClBH,EADkB,yCACuBC,IAFf,uBACvBG,EADuB,EACvBA,KADuB,kBAKxBA,GALwB,2CAAH,qDAQjBC,EAAY,mCAAG,WAAMxB,GAAN,yFACHsB,EAAAA,EAAAA,IAAA,UAClBH,EADkB,oBACEnB,EADF,oBACqBoB,EADrB,oBADG,uBAClBG,EADkB,EAClBA,KADkB,kBAKnBA,GALmB,2CAAH,sDAQZE,EAAY,mCAAG,WAAMzB,GAAN,yFACHsB,EAAAA,EAAAA,IAAA,UAClBH,EADkB,oBACEnB,EADF,4BAC6BoB,EAD7B,oBADG,uBAClBG,EADkB,EAClBA,KADkB,kBAKnBA,GALmB,2CAAH,sDAQZf,EAAe,mCAAG,WAAMR,GAAN,yFACNsB,EAAAA,EAAAA,IAAA,UAClBH,EADkB,oBACEnB,EADF,6BAC8BoB,EAD9B,2BADM,uBACrBG,EADqB,EACrBA,KADqB,kBAKtBA,GALsB,2CAAH,sDAQfG,EAAiB,mCAAG,WAAMC,GAAN,yFACRL,EAAAA,EAAAA,IAAA,UAClBH,EADkB,mCACiBC,EADjB,iCACiDO,EADjD,gCADQ,uBACvBJ,EADuB,EACvBA,KADuB,kBAKxBA,GALwB,2CAAH,qD","sources":["components/Loader/Loader.jsx","components/Reviews/Reviews.styled.js","components/Reviews/Reviews.jsx","services/api.jsx"],"sourcesContent":["import { ThreeDots } from 'react-loader-spinner';\n\nexport const Loader = () => {\n  return (\n    <ThreeDots\n      height=\"80\"\n      width=\"80\"\n      radius=\"9\"\n      color=\"#4fa94d\"\n      ariaLabel=\"three-dots-loading\"\n      wrapperStyle={{ justifyContent: 'center' }}\n      wrapperClassName=\"loader\"\n      visible={true}\n    />\n  );\n};\n","import styled from 'styled-components';\n\nexport const NoData = styled.p`\n  margin-left: 40px;\n`;\n\nexport const List = styled.ul`\n  list-style: none;\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieReviews } from 'services/api';\nimport { Loader } from 'components/Loader/Loader';\nimport { NoData, List } from './Reviews.styled';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const { movieId } = useParams();\n  const [showLoader, setShowLoader] = useState(false);\n  const [isContentDownloaded, setIsContentDownloaded] = useState(false);\n\n  useEffect(() => {\n    setShowLoader(true);\n    const fetchMovieCast = async movieId => {\n      try {\n        const { results } = await getMovieReviews(movieId);\n        // console.log(results);\n        setReviews(results);\n      } catch (error) {\n        console.log(error.message);\n      } finally {\n        setShowLoader(false);\n        setIsContentDownloaded(true);\n      }\n    };\n\n    fetchMovieCast(movieId);\n  }, [movieId]);\n\n  return (\n    <>\n      {showLoader && <Loader />}\n      {isContentDownloaded && reviews.length === 0 ? (\n        <NoData>Sorry, there is no review for this movie</NoData>\n      ) : (\n        <List>\n          {reviews.map(review => (\n            <li key={review.id}>\n              <h3>Author: {review.author}</h3>\n              <p>{review.content}</p>\n            </li>\n          ))}\n        </List>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org';\nconst API_KEY = '8776cc9f66dd32d7c5ecc9b66eb74c99';\n\nexport const getTrendingMovies = async () => {\n  const { data } = await axios.get(\n    `${BASE_URL}/3/trending/movie/day?api_key=${API_KEY}`\n  );\n\n  return data;\n};\n\nexport const getMovieById = async movieId => {\n  const { data } = await axios.get(\n    `${BASE_URL}/3/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return data;\n};\n\nexport const getMovieCast = async movieId => {\n  const { data } = await axios.get(\n    `${BASE_URL}/3/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n\n  return data;\n};\n\nexport const getMovieReviews = async movieId => {\n  const { data } = await axios.get(\n    `${BASE_URL}/3/movie/${movieId}}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n\n  return data;\n};\n\nexport const getMovieByKeyword = async query => {\n  const { data } = await axios.get(\n    `${BASE_URL}/3/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n\n  return data;\n};\n"],"names":["Loader","height","width","radius","color","ariaLabel","wrapperStyle","justifyContent","wrapperClassName","visible","NoData","styled","List","useState","reviews","setReviews","movieId","useParams","showLoader","setShowLoader","isContentDownloaded","setIsContentDownloaded","useEffect","fetchMovieCast","getMovieReviews","results","console","log","message","length","map","review","author","content","id","BASE_URL","API_KEY","getTrendingMovies","axios","data","getMovieById","getMovieCast","getMovieByKeyword","query"],"sourceRoot":""}