{"version":3,"file":"static/js/840.e6e9096d.chunk.js","mappings":"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","sources":["components/Loader/Loader.jsx","pages/MovieDetails.styled.js","pages/MovieDetails.jsx","services/api.jsx"],"sourcesContent":["import { ThreeDots } from 'react-loader-spinner';\n\nexport const Loader = () => {\n  return (\n    <ThreeDots\n      height=\"80\"\n      width=\"80\"\n      radius=\"9\"\n      color=\"#4fa94d\"\n      ariaLabel=\"three-dots-loading\"\n      wrapperStyle={{ justifyContent: 'center' }}\n      wrapperClassName=\"loader\"\n      visible={true}\n    />\n  );\n};\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  margin-top: 20px;\n  margin-left: 40px;\n`;\n\nexport const Image = styled.img`\n  margin-right: 40px;\n  width: 300px;\n  height: auto;\n`;\n","import { useRef, useEffect, useState, Suspense } from 'react';\nimport { useParams, useLocation, Link, Outlet } from 'react-router-dom';\nimport { getMovieById } from 'services/api';\nimport { Wrapper, Image } from './MovieDetails.styled';\nimport { Loader } from 'components/Loader/Loader';\n\nconst MovieDetails = () => {\n  const [movieInfo, setMovieInfo] = useState([]);\n  const [showLoader, setShowLoader] = useState(false);\n  const [isContentDownloaded, setIsContentDownloaded] = useState(false);\n\n  const location = useLocation();\n  const backLinkLocationRef = useRef(location.state?.from ?? '/');\n  const { movieId } = useParams();\n  // console.log('locationDetails', location);\n\n  useEffect(() => {\n    setShowLoader(true);\n    const fetchTrendingMovies = async movieId => {\n      try {\n        const data = await getMovieById(movieId);\n        setMovieInfo(data);\n      } catch (error) {\n        console.log(error.message);\n      } finally {\n        setShowLoader(false);\n        setIsContentDownloaded(true);\n      }\n    };\n\n    fetchTrendingMovies(movieId);\n  }, [movieId]);\n\n  const { poster_path, original_title, vote_average, overview, genres } =\n    movieInfo;\n\n  const userScore = vote_average\n    ? `${(vote_average * 10).toFixed(0)}%`\n    : \"This movie haven't rated yet\";\n\n  const posterImg = poster_path\n    ? `https://image.tmdb.org/t/p/w400/${poster_path}`\n    : 'https://via.placeholder.com/400x600.png?text=Poster+Not+Available';\n\n  return (\n    <>\n      <Link to={backLinkLocationRef.current} state={{ from: 'MovieDetails' }}>\n        Go back\n      </Link>\n\n      {showLoader && <Loader />}\n\n      {isContentDownloaded && (\n        <>\n          <Wrapper>\n            <Image src={posterImg} alt={original_title} />\n            <div>\n              <h2>{original_title}</h2>\n              <p>User Score: {userScore}</p>\n              <h3>Overview</h3>\n              <p>{overview}</p>\n              <h3>Genres</h3>\n              <p>\n                {genres &&\n                  genres.length > 0 &&\n                  genres.map(genre => genre.name).join(', ')}\n              </p>\n            </div>\n          </Wrapper>\n          <ul>\n            <li>\n              <Link to=\"cast\">Cast</Link>\n            </li>\n            <li>\n              <Link to=\"reviews\">Reviews</Link>\n            </li>\n          </ul>\n        </>\n      )}\n\n      <Suspense>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org';\nconst API_KEY = '8776cc9f66dd32d7c5ecc9b66eb74c99';\n\nexport const getTrendingMovies = async () => {\n  const { data } = await axios.get(\n    `${BASE_URL}/3/trending/movie/day?api_key=${API_KEY}`\n  );\n\n  return data;\n};\n\nexport const getMovieById = async movieId => {\n  const { data } = await axios.get(\n    `${BASE_URL}/3/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return data;\n};\n\nexport const getMovieCast = async movieId => {\n  const { data } = await axios.get(\n    `${BASE_URL}/3/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n\n  return data;\n};\n\nexport const getMovieReviews = async movieId => {\n  const { data } = await axios.get(\n    `${BASE_URL}/3/movie/${movieId}}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n\n  return data;\n};\n\nexport const getMovieByKeyword = async query => {\n  const { data } = await axios.get(\n    `${BASE_URL}/3/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n\n  return data;\n};\n"],"names":["Loader","height","width","radius","color","ariaLabel","wrapperStyle","justifyContent","wrapperClassName","visible","Wrapper","styled","Image","useState","movieInfo","setMovieInfo","showLoader","setShowLoader","isContentDownloaded","setIsContentDownloaded","location","useLocation","backLinkLocationRef","useRef","state","from","movieId","useParams","useEffect","fetchTrendingMovies","getMovieById","data","console","log","message","poster_path","original_title","vote_average","overview","genres","userScore","toFixed","posterImg","to","current","src","alt","length","map","genre","name","join","Suspense","BASE_URL","API_KEY","getTrendingMovies","axios","getMovieCast","getMovieReviews","getMovieByKeyword","query"],"sourceRoot":""}