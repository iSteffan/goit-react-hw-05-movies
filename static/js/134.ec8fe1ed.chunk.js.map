{"version":3,"file":"static/js/134.ec8fe1ed.chunk.js","mappings":"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","sources":["components/Loader/Loader.jsx","components/MoviesGallery/MoviesGallery.styled.js","components/MoviesGallery/MoviesGallery.jsx","pages/Movies.jsx","services/api.jsx"],"sourcesContent":["import { ThreeDots } from 'react-loader-spinner';\n\nexport const Loader = () => {\n  return (\n    <ThreeDots\n      height=\"80\"\n      width=\"80\"\n      radius=\"9\"\n      color=\"#4fa94d\"\n      ariaLabel=\"three-dots-loading\"\n      wrapperStyle={{ justifyContent: 'center' }}\n      wrapperClassName=\"loader\"\n      visible={true}\n    />\n  );\n};\n","import styled from 'styled-components';\n\nexport const Image = styled.img`\n  width: 200px;\n  height: auto;\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 30px;\n\n  list-style: none;\n`;\n\nexport const MovieName = styled.h3`\n  width: 200px;\n`;\n","import { NavLink, useLocation } from 'react-router-dom';\nimport { Image, List, MovieName } from './MoviesGallery.styled';\nimport PropTypes from 'prop-types';\n\nexport const MoviesGallery = ({ movies }) => {\n  const location = useLocation();\n  // console.log('location', location);\n\n  return (\n    <List>\n      {movies.map(item => (\n        <li key={item.id}>\n          <NavLink to={`/movies/${item.id}`} state={{ from: location }}>\n            {item.backdrop_path ? (\n              <Image\n                src={`https://image.tmdb.org/t/p/w400/${item.poster_path}`}\n                alt={item.original_title}\n              />\n            ) : (\n              <Image\n                src={\n                  'https://via.placeholder.com/400x600.png?text=Poster+Not+Available'\n                }\n                alt={item.original_title}\n              />\n            )}\n            <MovieName>{item.original_title}</MovieName>\n          </NavLink>\n        </li>\n      ))}\n    </List>\n  );\n};\n\nMoviesGallery.propTypes = { movies: PropTypes.array };\n","import { useState, useEffect } from 'react';\nimport { useLocation, useSearchParams } from 'react-router-dom';\nimport { getMovieByKeyword } from 'services/api';\nimport { MoviesGallery } from 'components/MoviesGallery/MoviesGallery';\nimport { Loader } from 'components/Loader/Loader';\n\nconst Movies = () => {\n  const [foundMovies, setFoundMovies] = useState([]);\n  const [isFound, setIsFound] = useState(true);\n  const [keyword, setKeyword] = useState('');\n  const [showLoader, setShowLoader] = useState(false);\n\n  const location = useLocation();\n\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') ?? '';\n  // console.log('query', query);\n\n  // Оновлюємо стрічку URL\n  const updateQueryString = evt => {\n    const queryValue = evt.target.value;\n    if (queryValue === '') {\n      return setSearchParams({});\n    }\n    setSearchParams({ query: queryValue });\n  };\n\n  // Функція пошуку\n  const fetchMovieByKeyword = async keyword => {\n    setShowLoader(true);\n    setFoundMovies([]);\n\n    try {\n      const data = await getMovieByKeyword(keyword);\n      // console.log('results', data);\n      // Перевіряємо чи знайшли щось за ключовим словом\n      if (data.total_results === 0) {\n        setIsFound(false);\n        setFoundMovies([]);\n      } else {\n        setIsFound(true);\n        setFoundMovies(data.results);\n      }\n    } catch (error) {\n      console.log(error.message);\n    } finally {\n      setShowLoader(false);\n    }\n  };\n\n  // Пошук фільмів по сабміту\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    setKeyword(e.target.elements.query.value);\n    const key = e.target.elements.query.value;\n    fetchMovieByKeyword(key);\n  };\n\n  // запускаємо ефект нового запиту на бекенд при повернені на сторінку пошуку з сторінки деталей про фільм\n  useEffect(() => {\n    const followFromDetails = location.state?.from ?? '';\n    if (followFromDetails !== '') {\n      setShowLoader(true);\n\n      const fetchMovieByKeywordAgain = async keyword => {\n        try {\n          const { results } = await getMovieByKeyword(keyword);\n          setFoundMovies(results);\n        } catch (error) {\n          console.log(error.message);\n        } finally {\n          setShowLoader(false);\n        }\n      };\n\n      fetchMovieByKeywordAgain(query);\n    }\n  }, [keyword, location.state?.from, query]);\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          value={query}\n          onChange={updateQueryString}\n          name=\"query\"\n          placeholder=\"Search movies\"\n        />\n        <button type=\"submit\">Search</button>\n      </form>\n\n      {showLoader && <Loader />}\n\n      {isFound ? (\n        <MoviesGallery movies={foundMovies} />\n      ) : (\n        <p>Sorry, we can't find any movies by this tag</p>\n      )}\n    </div>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org';\nconst API_KEY = '8776cc9f66dd32d7c5ecc9b66eb74c99';\n\nexport const getTrendingMovies = async () => {\n  const { data } = await axios.get(\n    `${BASE_URL}/3/trending/movie/day?api_key=${API_KEY}`\n  );\n\n  return data;\n};\n\nexport const getMovieById = async movieId => {\n  const { data } = await axios.get(\n    `${BASE_URL}/3/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return data;\n};\n\nexport const getMovieCast = async movieId => {\n  const { data } = await axios.get(\n    `${BASE_URL}/3/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n\n  return data;\n};\n\nexport const getMovieReviews = async movieId => {\n  const { data } = await axios.get(\n    `${BASE_URL}/3/movie/${movieId}}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n\n  return data;\n};\n\nexport const getMovieByKeyword = async query => {\n  const { data } = await axios.get(\n    `${BASE_URL}/3/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n\n  return data;\n};\n"],"names":["Loader","height","width","radius","color","ariaLabel","wrapperStyle","justifyContent","wrapperClassName","visible","Image","styled","List","MovieName","MoviesGallery","movies","location","useLocation","map","item","to","id","state","from","backdrop_path","src","poster_path","alt","original_title","useState","foundMovies","setFoundMovies","isFound","setIsFound","keyword","setKeyword","showLoader","setShowLoader","useSearchParams","searchParams","setSearchParams","query","get","fetchMovieByKeyword","getMovieByKeyword","data","total_results","results","console","log","message","useEffect","fetchMovieByKeywordAgain","onSubmit","e","preventDefault","target","elements","value","key","type","onChange","evt","queryValue","name","placeholder","BASE_URL","API_KEY","getTrendingMovies","axios","getMovieById","movieId","getMovieCast","getMovieReviews"],"sourceRoot":""}