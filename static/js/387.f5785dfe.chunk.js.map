{"version":3,"file":"static/js/387.f5785dfe.chunk.js","mappings":"4QAEaA,EAAQC,EAAAA,GAAAA,IAAH,0DAKLC,EAAOD,EAAAA,GAAAA,GAAH,6C,SC4CjB,EA9Ca,WACX,OAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAmBR,OAjBAE,EAAAA,EAAAA,YAAU,WAER,IAAMC,EAAc,mCAAG,WAAMH,GAAN,mGAEII,EAAAA,EAAAA,IAAaJ,GAFjB,gBAEXF,EAFW,EAEXA,KAERC,EAAQD,GAJW,gDAMnBO,QAAQC,IAAI,KAAMC,SANC,qGAAH,sDAYpBJ,EAAeH,EAChB,GAAE,CAACA,KAGF,SAACJ,EAAD,UACGE,EAAKU,KAAI,SAAAC,GAAK,OACb,0BACGA,EAAMC,cACL,SAAChB,EAAD,CACEiB,IAAG,0CAAqCF,EAAMC,cAC9CE,IAAKH,EAAMI,QAGb,SAACnB,EAAD,CACEiB,IACE,oEAEFC,IAAKH,EAAMI,QAGf,wBAAKJ,EAAMI,QACX,uCAAeJ,EAAMK,eAfdL,EAAMM,QADF,KAqBpB,C,+LC/CKC,EAAW,6BACXC,EAAU,mCAEHC,EAAiB,mCAAG,sGACRC,EAAAA,EAAAA,IAAA,UAClBH,EADkB,yCACuBC,IAFf,uBACvBG,EADuB,EACvBA,KADuB,kBAKxBA,GALwB,2CAAH,qDAQjBC,EAAY,mCAAG,WAAMrB,GAAN,yFACHmB,EAAAA,EAAAA,IAAA,UAClBH,EADkB,oBACEhB,EADF,oBACqBiB,EADrB,oBADG,uBAClBG,EADkB,EAClBA,KADkB,kBAKnBA,GALmB,2CAAH,sDAQZhB,EAAY,mCAAG,WAAMJ,GAAN,yFACHmB,EAAAA,EAAAA,IAAA,UAClBH,EADkB,oBACEhB,EADF,4BAC6BiB,EAD7B,oBADG,uBAClBG,EADkB,EAClBA,KADkB,kBAKnBA,GALmB,2CAAH,sDAQZE,EAAe,mCAAG,WAAMtB,GAAN,yFACNmB,EAAAA,EAAAA,IAAA,UAClBH,EADkB,oBACEhB,EADF,6BAC8BiB,EAD9B,2BADM,uBACrBG,EADqB,EACrBA,KADqB,kBAKtBA,GALsB,2CAAH,sDAQfG,EAAiB,mCAAG,WAAMC,GAAN,yFACRL,EAAAA,EAAAA,IAAA,UAClBH,EADkB,mCACiBC,EADjB,iCACiDO,EADjD,gCADQ,uBACvBJ,EADuB,EACvBA,KADuB,kBAKxBA,GALwB,2CAAH,qD","sources":["components/Cast/Cast.styled.js","components/Cast/Cast.jsx","services/api.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Image = styled.img`\n  width: 100px;\n  height: auto;\n`;\n\nexport const List = styled.ul`\n  list-style: none;\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieCast } from 'services/api';\nimport { Image, List } from './Cast.styled';\n\nconst Cast = () => {\n  const [cast, setCast] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    // setShowLoader(true);\n    const fetchMovieCast = async movieId => {\n      try {\n        const { cast } = await getMovieCast(movieId);\n        // console.log(cast);\n        setCast(cast);\n      } catch (error) {\n        console.log(error.message);\n      } finally {\n        // setShowLoader(false);\n      }\n    };\n\n    fetchMovieCast(movieId);\n  }, [movieId]);\n\n  return (\n    <List>\n      {cast.map(actor => (\n        <li key={actor.cast_id}>\n          {actor.profile_path ? (\n            <Image\n              src={`https://image.tmdb.org/t/p/w400/${actor.profile_path}`}\n              alt={actor.name}\n            />\n          ) : (\n            <Image\n              src={\n                'https://via.placeholder.com/400x600.png?text=Poster+Not+Available'\n              }\n              alt={actor.name}\n            />\n          )}\n          <h3>{actor.name}</h3>\n          <p>Character: {actor.character}</p>\n        </li>\n      ))}\n    </List>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org';\nconst API_KEY = '8776cc9f66dd32d7c5ecc9b66eb74c99';\n\nexport const getTrendingMovies = async () => {\n  const { data } = await axios.get(\n    `${BASE_URL}/3/trending/movie/day?api_key=${API_KEY}`\n  );\n\n  return data;\n};\n\nexport const getMovieById = async movieId => {\n  const { data } = await axios.get(\n    `${BASE_URL}/3/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return data;\n};\n\nexport const getMovieCast = async movieId => {\n  const { data } = await axios.get(\n    `${BASE_URL}/3/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n\n  return data;\n};\n\nexport const getMovieReviews = async movieId => {\n  const { data } = await axios.get(\n    `${BASE_URL}/3/movie/${movieId}}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n\n  return data;\n};\n\nexport const getMovieByKeyword = async query => {\n  const { data } = await axios.get(\n    `${BASE_URL}/3/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n\n  return data;\n};\n"],"names":["Image","styled","List","useState","cast","setCast","movieId","useParams","useEffect","fetchMovieCast","getMovieCast","console","log","message","map","actor","profile_path","src","alt","name","character","cast_id","BASE_URL","API_KEY","getTrendingMovies","axios","data","getMovieById","getMovieReviews","getMovieByKeyword","query"],"sourceRoot":""}